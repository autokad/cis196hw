http://frozen-reef-4529.herokuapp.com/

most of the tasks i had done last week.  i had to use a migration to add the user id to my posts.  I also created a user model, even though before I was relying on devise.<br>
i updated my post model with:
	belongs_to :user
	validates :user_id, presence: true
	
and my user model:  has_many :posts, :dependent => :destroy

I also made sure that posts by a user get deleted when that user gets deleted on the destroy:
	@user.posts.destroy_all

<br>
creating shows/etc for my users clashed with devise, so i had to make sure the devise routes took presidense over the user resource routes.  Normally I wouldnt allow destroy functionality to users, i guess these are all admins.
<br>

i updated my header to include links to the user index, there one can edit and destroy users.
<h1> NOTES </h1>
*note the posts index has the link to the post in the title as does the users index, which has the show for the user when you click on the user id.
*since posts and users are maried now, adding new posts is only available if signed in.
* new posts are added by clicking the Add+ in the header.
* new users are created through the sign up.
* one can view the show/edit/destroy posts through http://frozen-reef-4529.herokuapp.com/posts or by clicking the header
* one can view the show/edit/destroy users through http://frozen-reef-4529.herokuapp.com/users or by clicking the header
----------------------------------------------------------------------------------------------------------
update gemfile:
gem 'devise'

run command:
bundle install
rails generate devise:install

rails generate devise User
rails generate migration AddFNameLnameUnameToUsers fname:string lname:string username:string
rake db:migrate

updated app\models\users.rb
attr_accessible :fname, :lname, :email, :password, :password_confirmation, :username, :remember_me

update config\application.rb
	# Required for Devise / Heroku
	config.assets.initialize_on_precompile = false

#updated app\views\welcome\index.html.erb
	<p>
		<% if user_signed_in? %>

		<% else %>
			<%= link_to "Sign Up Now!", new_user_registration_path, class: "btn btn-primary btn-large" %>
		<% end %>
	</p>

#created _header.html.erb in folder app\views\layouts with the following:
	<div class="navbar navbar-fixed-top">
		<div class="navbar-inner">
			<div class="container">
				<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</a>
				 <a class="brand" href="/">CIS 196</a>

					<div class="nav-collapse">
						<ul class="nav">
							<li>
								<%= link_to 'Home',  root_path %>
							</li>
							<li>    
								<%= link_to 'About',  about_path %>
							</li>
							<li>
								<%= link_to "Posts", posts_path %>
							</li>
							<li>    
								<%= link_to 'Add+',  "posts/new" %>
							</li>
						</ul>
						<ul class="nav pull-right">
							<% if user_signed_in? %>
								<li><%= link_to "Edit Profile", edit_user_registration_path %></li>
								 <li><%= link_to "Logout", destroy_user_session_path, method: :delete %></li>
							 <% else %>
								<li><%= link_to "Login", new_user_session_path %></li>
							<% end %>
						</ul>
					</div>
			</div>
		</div>
	</div>

# created _footer.html.erb in folder app\views\layouts with the following:
	<div class="footer">
	  <small>
		<%= link_to "Facebook", "https://www.facebook.com/AutoKaD" %>
		| <%= link_to "LinkedIn", "http://www.linkedin.com/profile/view?id=231329117" %>
	  </small>
	</div>

#updated app/assets/stylesheets/application.css
	body{
		padding-top: 60px;
	}

#created file app\views\welcome\about.html.erb
	<h1>About</h1>
	<p>
	  About...
	</p>

#updated config\routes.rb
	get 'about' => 'welcome#about'
	resources :posts

#run in command line:
	rails generate devise:views
	
#updated app\views\devise\registrations\new.html.erb
	<div class="container">
	<br>
	<h2>Sign up</h2>


	<%= simple_form_for(resource, :as => resource_name, :url => registration_path(resource_name), html: {class: 'form-horizontal'}) do |f| %>
	  <%= f.error_notification %>

	   <div class="control-group string optional user_firstname"><label class="string optional control-label" for="user_firstname">First Name</label><div class="controls"><input class="string optional" id="user_firstname" name="user[fname]" size="50" type="text" /></div></div>
	  <div class="control-group string optional user_lastname"><label class="string optional control-label" for="user_lastname">Last Name</label><div class="controls"><input class="string optional" id="user_lastname" name="user[lname]" size="50" type="text" /></div></div>
	  <div class="control-group string required user_username"><label class="string required control-label" for="user_username"><abbr title="required">*</abbr> Username</label><div class="controls"><input class="string required" id="user_username" name="user[username]" size="50" type="text" /></div></div>
	  <div class="control-group email optional user_email"><label class="email optional control-label" for="user_email">Email</label><div class="controls"><input class="string email optional" id="user_email" name="user[email]" size="50" type="email" value="" /></div></div>
	  <div class="control-group password optional user_password"><label class="password optional control-label" for="user_password">Password</label><div class="controls"><input class="password optional" id="user_password" name="user[password]" size="50" type="password" /></div></div>
	  <div class="control-group password optional user_password_confirmation"><label class="password optional control-label" for="user_password_confirmation">Password confirmation</label><div class="controls"><input class="password optional" id="user_password_confirmation" name="user[password_confirmation]" size="50" type="password" /></div></div>


	  <div class="form-actions">
		<%= f.submit "Sign up", class: "btn btn-primary" %>
	  </div>
	<% end %>

	<%= render "devise/shared/links" %>
	</div>

#updated app\views\devise\registrations\edit.html.erb
	<%= render 'layouts/header' %>
	
#in command line:
	rails generate controller posts new
	
#update app\views\posts\new.html.erb
	<h1>New Post</h1>

	<%= form_for :post, url: posts_path do |f| %>
	  <p>
		<%= f.label :title %><br>
		<%= f.text_field :title %>
	  </p>
	 
	  <p>
		<%= f.label :text %><br>
		<%= f.text_area :text %>
	  </p>
	 
	  <p>
		 <%= f.submit "Sign up", class: "btn btn-primary" %>
	  </p>
	<% end %>

#eddit app\controllers\posts_controller.rb
	def create
		render text: params[:post].inspect
	 end
	
#run in command:
	rails generate model Post title:string text:text
	rake db:migrate

#updated app\controllers\posts_controller.rb
	def new
		@post = Post.new
	end
	
	def create
		@post = Post.new(params[:post])
		if @post.save
			redirect_to @post
		else
			render 'new'
		end
	end
	
 	def show
		@post = Post.find(params[:id])
	end
	
	def index
		@posts = Post.all
	end
	
	private
	def post_params
		params.require(:post).permit(:title, :text)
	end

#updated view/posts/new.html.erb
	<h1>New Post</h1>

	<%= form_for :post, url: posts_path do |f| %>
	  <p>
		<%= f.label :title %><br>
		<%= f.text_field :title %>
	  </p>
	 
	  <p>
		<%= f.label :text %><br>
		<%= f.text_area :text %>
	  </p>
	 
	  <p>
		 <%= f.submit "Post!", class: "btn btn-primary" %>
	  </p>
	<% end %>
	
#updated view/posts/show.html.erb
	<p>
	  <strong>Title:</strong>
	  <%= @post.title %>
	</p>
	 
	<p>
	  <strong>Text:</strong>
	  <%= @post.text %>
	</p>
	
#updated view/posts/index.html.erb
	<h1>Listing posts</h1>
	 
	<table>
	  <tr>
		<th>Title</th>
		<th>Text</th>
	  </tr>
	 
	  <% @posts.each do |post| %>
		<tr>
		  <td><%= post.title %></td>
		  <td><%= post.text %></td>
		</tr>
	  <% end %>
	</table>